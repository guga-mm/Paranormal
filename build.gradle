plugins {
	id 'maven-publish'
	id 'fabric-loom' version '1.11-SNAPSHOT'
}

base {
	archivesName = project.archives_base_name
}

version = "$project.version+${minecraft_version}"
group = project.maven_group

repositories {
	maven {
		name "modrinth"
		url "https://api.modrinth.com/maven"
		content {
			includeGroup('maven.modrinth')
		}
	}

	maven {
		name = 'BlameJared Maven (CrT / Bookshelf)'
		url = 'https://maven.blamejared.com'
	}

	//maven {
	//	name = 'GeckoLib'
	//	url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	//}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"paranormal" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation("foundry.veil:veil-fabric-${project.minecraft_version}:${project.veil_version}") {
		exclude group: "maven.modrinth"
	}

	modRuntimeOnly "maven.modrinth:modmenu:11.0.3"

	//modImplementation "software.bernie.geckolib:geckolib-quilt-${geckolib}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 21
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// Configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
